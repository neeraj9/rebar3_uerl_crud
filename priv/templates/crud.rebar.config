%% All deps found on hex.pm. These will be fetched.
%% To declare which of these dependencies are needed at run time,
%% Add them to `src/crud.app.src'
{deps, [
    {cowboy, "1.0.4"},
    {jiffy, ".*", {git, "https://github.com/davisp/jiffy.git", {branch, "master"}}},
    {uuid, "1.5.2-rc1", {pkg, uuid_erl}},
    {lager, "3.2.1"},
    {cowboy_swagger, "1.1.0"},

    % debug tools
    recon,

    % force package usage on other libs
    {folsom, "0.8.3"},
    {ibrowse, "4.2.2"}, % actually a test dep :(

    % metrics (doesnt work because c code in jiffy)
    {folsom_cowboy, {git, "https://github.com/boundary/folsom_cowboy.git", {branch, "master"}}}

]}.

% read
% https://github.com/davisp/jiffy/pull/84
% https://github.com/blt/port_compiler#use-with-existing-dependency
{overrides,
    [
        {override, jiffy, [
        {plugins, [pc]},
        % hint: https://github.com/Vagabond/gen_smtp/blob/master/rebar.config
        {port_env, [
            % for some reason the search path do not include jiffy/c_src so include
            % it manually.
            {"win32", "CFLAGS", "/Wall /DEBUG /O2 /DWIN32 /D_WINDOWS /D_WIN32 /DWINDOWS /I c_src"},
            {"win32", "CXXFLAGS", "/Wall /DEBUG /O2 /DWIN32 /D_WINDOWS /D_WIN32 /DWINDOWS /I c_src"},

            %% Windows specific flags
            %% add MS Visual C++ support to rebar on Windows
            %% which are missed in port_compiler (
            {"win32", "DRV_LINK_CXX_TEMPLATE",
                "$LINKER $PORT_IN_FILES $LDFLAGS $DRV_LDFLAGS /OUT:$PORT_OUT_FILE"},
            {"win32", "EXE_LINK_CXX_TEMPLATE",
                "$LINKER $PORT_IN_FILES $LDFLAGS $EXE_LDFLAGS /OUT:$PORT_OUT_FILE"}]},
        % for linux|unix
        {artifacts, ["priv/jiffy.so"]},
        % for windows it is a dll
        %{artifacts, ["priv/jiffy.dll"]},
        {provider_hooks, [
            {post,
                [
                    {compile, {pc, compile}},
                    {clean, {pc, clean}}
                ]
            }]
        }
    ]}
]}.

{erl_opts, [{parse_transform, lager_transform},
            {lager_extra_sinks, [req_logs]}
]}.

{edoc_opts, [
    {new, true},
    {source_path, ["src/", "models/", "handlers/", "backends/"]}
]}.

{profiles, [
    {prod, [{relx, [{dev_mode, false},
                    {include_src, false},
                    {include_erts, true}
                    ]}
    ]},
    {test, [
        {deps, [proper, meck]}
    ]}
]}.

{plugins, [
    %% the plugin name is still rebar3_crud and I didnt get time to
    %% fix that. TODO
    {rebar3_crud, {git, "https://github.com/neeraj9/rebar3_uerl_crud.git", {branch, "dev"}}},
    {rebar_alias, "0.2.0"},
    rebar3_proper
]}.

{alias, [
    {check, [xref, dialyzer, {proper, "-c"}, {cover, "-v"}]}
]}.

{relx, [
    {release, {crud, "0.1.0"},
     [crud, folsom_cowboy, recon]},

     {sys_config, "config/sys.config"}
]}.

{xref_checks, [
    undefined_function_calls,undefined_functions,locals_not_used,
    exports_not_used,deprecated_function_calls, deprecated_functions
]}.

%% Paths for structure
{src_dirs, ["models", "handlers", "backends", "src"]}.

